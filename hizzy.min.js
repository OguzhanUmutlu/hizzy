#!/usr/bin/env node
module.exports={};const sT=Date.now(),fs=(global.__sT__=sT,global.__PRODUCT__="hizzy",global.__PRODUCT_U__="Hizzy",global.__VERSION__=require("./package.json").version,require("fs")),dotenv=require("dotenv"),path=require("path"),os=require("os"),argv=process["argv"],exit=(require("fancy-printer").makeGlobal(!0),dotenv.config(),(...e)=>{printer.dev.error(...e),process.exit(1)}),checkDefault=(printer.title(__PRODUCT_U__+" v"+__VERSION__),printer.makeGlobal(!0).setOptions({format:e=>printer.css("color: "+printer.getTag(e.tag||"log").c)+"  %tag  %time %stack > %text",timeBackgroundColor:"",timeColor:"",stackColor:"",filenameColor:"",lineColor:"",columnColor:"",timePadding:0,tagPadding:0,styleSubstitutionsEnabled:!0}),printer.dev=printer.create({format:e=>printer.css("color: "+printer.getTag(e.tag||"log").c)+"  %tag  %text",tagPadding:0,styleSubstitutionsEnabled:!0}),printer.tags=printer.dev.tags={pass:{text:"✓",c:"greenBright",textColor:"green"},fail:{text:"X",c:"redBright",textColor:"redBright"},error:{text:"",c:"red",textColor:"red"},warn:{text:"✩",c:"yellow",textColor:"yellow"},info:{text:"?",c:"blueBright",textColor:"blue"},debug:{text:"~",c:"gray",textColor:"gray"},notice:{text:"!",c:"cyanBright",textColor:"cyan"},log:{text:'"',c:"gray",textColor:"white"},assert:{text:">",c:"white",textColor:"gray"}},printer.inline.options.format="%text",Object.keys(printer.styles).forEach(e=>{"t"!==e&&(delete printer.styles[e],delete printer.dev.styles[e])}),(e,o={},r=[])=>{var t,i=[];for(const n in o)void 0===e[n]&&(e[n]=o[n],i.push([...r,n])),e[n].constructor===Object&&"addons"!==n&&"static"!==n&&(t=checkDefault(e[n],o[n],[...r,n]),i.push(...t));return i}),propExpect=(e,o,r)=>exit("The config file %c"+__PRODUCT__+".json%c's %c"+e+"%c property was expected as: %c"+o+"%c, got:%c","color: orange","color: red","color: orange","color: red","color: orange","color: red","color: orange",r),isTerminal="object"==typeof module.parent;let dir=process.cwd(),file;const args=argv.slice(2).filter(e=>!e.startsWith("-")),optList=argv.slice(2).filter(e=>e.startsWith("-"));if(isTerminal&&optList.some(e=>["-h","--help"].includes(e.toLowerCase()))&&(printer.raw.log("%c  "+__PRODUCT_U__+" v"+__VERSION__,"color: yellow"),printer.println(""),printer.raw.log("%c  Usage: "+__PRODUCT__+" [root]","color: magenta"),printer.println(""),printer.raw.log("%c  Options:","color: orange"),printer.raw.log("%c    -h, --help%c               shows this page","color: green","color: yellow"),printer.raw.log("%c    -v, --version%c            shows the version","color: green","color: yellow"),printer.raw.log("%c    -av, --advanced-version%c  shows advanced information","color: green","color: yellow"),printer.raw.log("%c    -b, --build%c              only builds the project and exits","color: green","color: yellow"),printer.raw.log("%c    --host%c                   sets the hostname","color: green","color: yellow"),printer.raw.log("%c    --port=PORT%c              sets the port (0 = random)","color: green","color: yellow"),printer.raw.log("%c    --dev%c                    enables developer mode","color: green","color: yellow"),printer.raw.log("%c    --build%c                  forces it to build","color: green","color: yellow"),printer.raw.log("%c    --open%c                   opens the app on start","color: green","color: yellow"),printer.raw.log("%c    --debug%c                  enables debug messages","color: green","color: yellow"),printer.raw.log("%c    --debug-socket%c           sends debug messages of sockets","color: green","color: yellow"),printer.raw.log("%c    --experimental%c           builds html/jsx injection files","color: green","color: yellow"),printer.raw.log("%c    --addon-init%c             initializes up an addon environment","color: green","color: yellow"),process.exit()),isTerminal&&optList.some(e=>["-v","--version"].includes(e.toLowerCase()))&&(printer.raw.log(__PRODUCT_U__+" v"+__VERSION__),process.exit()),isTerminal&&optList.some(e=>["-av","--advanced-version"].includes(e.toLowerCase()))&&(printer.raw.log(`${__PRODUCT__}: v${__VERSION__}
node: ${process.version}
device: ${os.platform()}-`+os.arch()),process.exit()),isTerminal&&optList.some(e=>["--addon-init"].includes(e.toLowerCase()))){const u=args[0],v=(u||exit("Usage: npx hizzy --addon-init YourAddonName"),/^(?:@[a-z0-9-*~][a-z0-9-*._~]*\/)?[a-z0-9-~][a-z0-9-._~]*$/.test(u)||exit("Please select a valid addon name!"),path.join(process.cwd(),u));fs.existsSync(path.join(v,u))&&exit("There is already a directory at '%c"+v+"$t'!","color: orange"),fs.mkdirSync(path.join(v,u)),fs.writeFileSync(path.join(v,u,"index.js"),`const {AddonModule} = Hizzy;
module.exports = class MyAddon extends AddonModule {
    onLoad() {
        this.log("Loaded!");
    };

    onEnable() {
        this.log("Enabled!");
    };

    onDisable(reason) {
        this.log("Disabled for the reason:", reason);
    }

    onClientSideLoad() {
        this.log("Addon has been loaded in client side!");
    };

    onClientSideRendered() {
        this.log("A page has been rendered in the client side!");
    };

    onClientSideError(error) {
        this.log("An error occurred in the client side:", error);
    };
};`),fs.writeFileSync(path.join(v,u,"package.json"),`{
  "name": ${JSON.stringify(u)},
  "description": "This is an addon!",
  "version": "1.0.0",
  "main": "index.js"
}`),printer.raw.pass("A new addon has been set up at: %c"+u,"color: orange"),process.exit()}const isOnlyBuild=optList.some(e=>["-b","--build"].includes(e.toLowerCase()));if(isOnlyBuild||(printer.clear(),printer.print("\n")),isTerminal&&args[0]){const x=path.join(process.cwd(),args[0]);fs.existsSync(x)||exit("Couldn't open the file %c'"+x+"'%c.","color: orange","color: red"),dir=fs.statSync(x).isDirectory()?x:(file=x,path.dirname(x))}isTerminal||exit(__PRODUCT_U__+"'s module mode has not been developed yet. Its API can still be reached by importing/requiring '"+__PRODUCT__+"/api'."),(async()=>{var o=path.join(dir,__PRODUCT__+".json"),e=fs.existsSync(o),r={dev:!0,port:-1,fileRefresh:!0,autoBuild:!0,listen:!0,main:"Server.jsx",mainModule:!0,checkConfig:!0,realtime:!0,static:{static:""},https:!1,srcFolder:"src",connectionTimeout:6e4,keepaliveTimeout:3e4,clientKeepalive:2e4,minClientKeepalive:8e3,addons:{},includeOriginalInBuild:!0};e&&fs.statSync(o).isFile()||(e&&fs.rmSync(o),optList.includes("--debug")&&printer.dev.debug("Creating the %c/"+__PRODUCT__+".json&t file...","color: orange"),fs.writeFileSync(o,JSON.stringify(r,null,2))),global.conf={};try{global.conf=JSON.parse(fs.readFileSync(o,"utf8"))}catch(e){return exit("Invalid JSON in the file %c'"+o+"'%c: %c"+e.toString()+"%c.","color: orange","color: red","color: orange","color: red")}var e=conf.checkConfig,t=checkDefault(conf,r);if(!isOnlyBuild&&t.length&&e&&(fs.writeFileSync(o,JSON.stringify(conf,null,2)),printer.dev.warn("Updated following properties in "+__PRODUCT__+".json: "+t.map(e=>e.join("->")).join(", "))),Array.isArray(conf.extensionRemovals)||(conf.extensionRemovals=r.extensionRemovals),conf.extensionRemovals=[...new Set(conf.extensionRemovals)],-1!==conf.keepaliveTimeout&&conf.clientKeepalive>=conf.keepaliveTimeout)return exit("Config's 'clientKeepalive' property has to be smaller than 'keepaliveTimeout'.");Object.freeze(conf),global._argv_={host:!1,port:conf.port,dev:conf.dev,build:conf.autoBuild,"debug-socket":!1,debug:!1,open:!1},Object.keys(_argv_).forEach(o=>{if(!0!==_argv_[o])if("boolean"==typeof _argv_[o]){if(optList.some(e=>e==="--"+o))return _argv_[o]=!0}else{var e=optList.find(e=>e.startsWith("--"+o+"="));e&&(_argv_[o]=e.split("=").slice(1).join("="))}}),Object.freeze(_argv_),_argv_.debug||(printer.options.disabledTags.push("debug"),printer.dev.options.disabledTags.push("debug"));e=fs.existsSync(path.join(dir,".build")),o=path.join(dir,conf.srcFolder),t=fs.existsSync(o),t&&fs.statSync(o).isDirectory()||(e?printer.dev.debug("Skipping the creation of %c/"+conf.srcFolder+"&t because there is an existing build.","color: orange"):(t&&fs.rmSync(o),printer.dev.debug("Creating the %c/"+conf.srcFolder+"&t folder...","color: orange"),fs.mkdirSync(o),fs.writeFileSync(path.join(o,"App.jsx"),`const foo = 20;
export default <div>Hello, world! { foo * 2 }</div>`))),global[__PRODUCT_U__]=new(require("./api"))(dir),r=path.join(dir,conf.srcFolder,conf.main),e=path.extname(r);if(fs.existsSync(r)||(printer.dev.debug("Creating the %c/src/"+conf.main+"&t file...","color: orange"),fs.writeFileSync(r,{".jsx":`export default <Routes>
    <Route path="/" route="./App.jsx"/>
</Routes>;`}[e])),isOnlyBuild)_argv_["just-build"]=!0,Hizzy.build().then(()=>process.exit());else{var i=e=>null===e?"null":e&&e.constructor===Array?"array":typeof e;if("object"!=typeof conf.addons)return exit("Config's 'conf.addons' property has to be an object or an array, got: "+i(conf.addons)+".");if(0<Object.keys(conf.addons).length){var n=conf.addons;if(Array.isArray(n))for(let e=0;e<n.length;e++){var s=n[e];if("string"==typeof s)await Hizzy.Addon.create(s,{});else{if(!Array.isArray(s))return exit("Config's 'conf.addons["+e+"]' property should either be an array or a string, got: "+i(k));if(s[1]&&s[1].constructor!==Object)return exit("Config's 'conf.addons["+e+"][1]' property should be an object or empty, got: "+i(s[1]));await Hizzy.Addon.create(s[0],s[1])}}else for(const k in n){if(n[k].constructor!==Object)return exit("Config's 'conf.addons["+k+"] property should be an object, got: "+i(n[k]));await Hizzy.Addon.create(k,n[k])}}await Hizzy.init(),(_argv_.dev||conf.dev)&&(Hizzy.dev=!0,Hizzy.processMain(Hizzy.jsxToJS(fs.readFileSync(r),e)).then(e=>e)),conf.realtime&&Hizzy.enableRealtime(),conf.fileRefresh&&(Hizzy.autoRefresh=!0),Hizzy.dev?conf.listen&&Hizzy.listen().then(e=>e):_argv_.build?Hizzy.build().then(e=>e):conf.listen&&Hizzy.scanBuild().then(e=>e)}})();